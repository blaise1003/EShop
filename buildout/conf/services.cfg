[buildout]
# This config sits alone because, theoretically, by putting it between base.cfg
# and staging.cfg, and tweaking some stuff in the latter, one doesn't have to
# copypaste large amounts.
#
# Theoretically.
unzip = true
extends = base.cfg

parts +=
    paths
    postgresql
    postgresql-paths
    postgresql-init
    postgresql-conf
    postgresql-logclean
    django-logclean
    psycopg2
    memcached
    gunicorn
    paster-conf
    supervisord
    supervisord-init
    cron

eggs +=
    psycopg2
    python-memcached
    PasteDeploy


[paths]
recipe = z3c.recipe.mkdir
paster_conf = ${buildout:directory}/etc/paster
cron_weekly = ${buildout:directory}/build/etc/cron.weekly
cron_tabs = ${buildout:directory}/build/var/spool/crontabs
logrotate_d = ${buildout:directory}/build/etc/logrotate.d
init_d = ${buildout:directory}/build/etc/init.d
logs = ${buildout:directory}/var/log
paths =
      ${paths:paster_conf}
      ${paths:cron_weekly}
      ${paths:logrotate_d}
      ${paths:init_d}
      ${paths:logs}


[postgresql]
recipe = zc.recipe.cmmi
url = http://ftp2.it.postgresql.org/mirrors/postgres/source/v9.1.3/postgresql-9.1.3.tar.bz2
md5sum = 641e1915f7ebfdc9f138e4c55b6aec0e


[psycopg2]
recipe = zc.recipe.egg:custom
environment = psycopg2-env
rpath = ${postgresql:location}/lib


[psycopg2-env]
# This is needed to help psycopg2 find the pg_config script
PATH=${postgresql:location}/bin:%(PATH)s


[postgresql-paths]
recipe = z3c.recipe.mkdir
etc_path = ${postgresql:location}/etc
pg_data_container = ${buildout:directory}/var
paths =
     ${postgresql-paths:etc_path}
     ${postgresql-paths:pg_data_container}


[postgresql-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/postgresql.conf.in
output = ${postgresql-paths:etc_path}/postgresql.conf


[postgresql-init]
recipe = collective.recipe.cmd
shell = /bin/bash
on_install = true
on_update = false
datadir = ${postgresql-paths:pg_data_container}/pgdata
cmds =
    /usr/bin/test -e ${buildout:directory}/bin/psql || /bin/ln -s ${postgresql:location}/bin/psql ${buildout:directory}/bin/psql
    /usr/bin/test -e ${postgresql-init:datadir} && exit 0
    ${postgresql:location}/bin/initdb -E UTF8 ${postgresql-init:datadir}
    ${postgresql:location}/bin/postgres --single -D ${postgresql-init:datadir} template1 << EOF
        CREATE USER ${config:db_user} WITH PASSWORD '${config:db_password}';
        CREATE DATABASE ${config:db_name} OWNER ${config:db_user};
    EOF
    /bin/echo 'host all ${config:db_name} 0.0.0.0/0 md5' >> ${postgresql-init:datadir}/pg_hba.conf
    /bin/echo "include '${postgresql-conf:output}'" >> ${postgresql-init:datadir}/postgresql.conf


[postgresql-logclean]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/postgres_logs_clean.in
output = ${paths:cron_weekly}/postgres_logs_clean-${config:hostname}
mode = 755


[django-logclean]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/django.logrotate.in
output = ${paths:logrotate_d}/django-${config:hostname}
mode = 644


[memcached]
recipe = zc.recipe.cmmi
url = http://memcached.googlecode.com/files/memcached-1.4.13.tar.gz
md5sum = 6d18c6d25da945442fcc1187b3b63b7f
extra_options =
    --bindir=${buildout:bin-directory}


[gunicorn]
recipe = zc.recipe.egg
eggs =
    ${buildout:eggs}
    gunicorn
    djc.recipe
extra-paths = ${django:location}


[paster-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/paster-production.ini.in
output = ${paths:paster_conf}/paster-production.ini


[supervisord]
recipe = collective.recipe.supervisor
port = ${config:supervisord_host}:${config:supervisord_port}
serverurl = http://${config:supervisord_host}:${config:supervisord_port}
logfile-maxbytes = 20MB
logfile-backups = 5
programs =
    10 postgresql (autostart=true startsecs=10 stdout_logfile=${paths:logs}/supervisord-postgres.log umask=077 stopsignal=INT) ${postgresql:location}/bin/postmaster [-D ${postgresql-init:datadir}] ${postgresql-init:datadir} true ${config:daemon_user}
    20 memcached (autostart=true startsecs=1) ${buildout:bin-directory}/memcached [-m ${config:memcached_megs} -l ${config:memcached_host} -p ${config:memcached_port}]  ${buildout:directory} true ${config:daemon_user}
    30 django (autostart=true startsecs=5 stdout_logfile=${paths:logs}/supervisord-gunicorn.log redirect_stderr=true) ${buildout:bin-directory}/gunicorn_paster [${paster-conf:output}]  ${buildout:directory} true ${config:daemon_user}


[supervisord-init]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/supervisord.init.in
output = ${buildout:bin-directory}/supervisord-init
mode = 755


[cron]
recipe = collective.recipe.template
input = inline:
    SHELL=/bin/sh
    CRON_TZ=Europe/Rome
    # Update prices
    5  0  *  *  *  ${buildout:bin-directory}/django satchmo_rebuild_pricing
output = ${paths:cron_tabs}/${config:daemon_user}